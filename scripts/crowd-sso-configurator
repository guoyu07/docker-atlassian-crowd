#!sh

crowd_sso_property_file() {
	local properties_var properties
	properties_var="CROWD_SSO_PROPERTIES_$1"
	properties="${!properties_var}"
	realpath "$properties" 2>/dev/null || echo "$properties"
}

crowd_sso_applications() {
	printenv | grep CROWD_SSO_APP_ | cut -f4 -d_ | sort | uniq	
}

crowd_sso_overwrite() {
	local overwrite_var overwrite
	overwrite_var="CROWD_SSO_PROPERTIES_${1}_OVERWRITE"
	overwrite="${!overwrite_var}"
	overwrite="${overwrite:-true}"
	$overwrite
}

crowd_sso_crowd_properties() {
	local val var
	printenv | grep "CROWD_SSO_APP_${1}" | cut -f5- -d_ | while read var; do
		  val="${var#*=}"
		  var="${var%%=*}"
		  var="$(echo $var | sed -e 's/_/./g' | tr '[:upper:]' '[:lower:]')"
		  echo "$var=$val"
	done
}

crowd_sso_applications | while read application; do
	properties="$(crowd_sso_property_file $application)"
	[[ "$properties" ]]  || continue
	if crowd_sso_overwrite "$application"; then
		echo -e "\e[1mCrowd SSO\e[0m \e[32mApplication\e[0m \e[1m$application\e[0m => $properties"
		crowd_sso_crowd_properties "$application" \
		| install -D -m 0644 -o $APPLICATION_USER -g $APPLICATION_USER /dev/stdin "$properties"
	fi
done

[[ $(crowd_sso_applications | wc -w) -eq 1 ]] && export JAVA_OPTS="$JAVA_OPTS -Dcrowd.properties=$(crowd_sso_property_file $(crowd_sso_applications))"